# -*- coding: utf-8 -*-
"""SpotifyProject_1_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Rvwya8ODdzHxF7LEsSAMiQph1qqbN7z-
"""

#import libraries
import requests
import pandas
import time
import numpy
import base64
import datetime

# Do not share these ids
client_id = '1186efbd9f1b49c6b116051028845910'
secret_id = '9982ebda2750418eaf445c1a54363333'

class SpotifyAPI(object):
  access_token = None
  access_token_expires = datetime.datetime.now()
  access_token_did_expire = True
  client_id = None
  client_secret = None
  token_url = 'https://accounts.spotify.com/api/token'

  def __init__(self, client_id, client_secret, *args, **kwargs):
    super().__init__(*args, **kwargs)
    self.client_id = client_id
    self.client_secret = client_secret

  def get_client_credentials(self):
    #Return a base64 encoded string
    client_id = self.client_id
    client_secret = self.client_secret
    if client_secret == None or client_id == None:
      raise Exception('client_id and client_secret not set')
    client_creds = f"{client_id}:{secret_id}"
    client_creds_b64 = base64.b64encode(client_creds.encode())
    return client_creds_b64.decode()

  def get_token_headers(self):
    client_creds_b64 = self.get_client_credentials()
    return {
        "Authorization": f"Basic {client_creds_b64}"
      }
  
  def get_token_data(self):
    return{
        "grant_type": "client_credentials"
    }
    
  def perform_auth(self):
    token_url = self.token_url
    token_data = self.get_token_data()
    token_headers = self.get_token_headers()
    r = requests.post(token_url, data=token_data, headers=token_headers)
    if r.status_code not in range(200, 299):
      return False
    data = r.json()
    now = datetime.datetime.now()
    access_token = data['access_token']
    expires_in = data['expires_in']
    expires = now + datetime.timedelta(seconds=expires_in)
    self.access_token = access_token
    self.access_token_expires = expires
    self.access_token_did_expire = expires < now
    return True

client = SpotifyAPI(client_id, secret_id)

client.perform_auth()

client.access_token